{"version":3,"sources":["firebase.js","components/SignIn.js","components/Sidebar.js","pages/PageConfig.js","pages/Home.js","components/CollapsiblePost.js","pages/AllPosts.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","googleProvider","GoogleAuthProvider","SignIn","_ref","user","setUser","email","setEmail","useState","password","setPassword","handleSignOut","async","signOut","error","alert","message","React","createElement","className","displayName","onClick","window","location","href","type","placeholder","value","onChange","e","target","userCredential","signInWithEmailAndPassword","result","signInWithPopup","Sidebar","onNavigate","pages","map","page","index","Fragment","key","name","toLowerCase","replace","separator","addPage","component","arguments","length","undefined","push","Home","src","alt","rel","CollapsiblePost","title","subtitle","date","author","content","files","modalFile","setModalFile","externalLink","setExternalLink","openModal","file","getFileSrc","startsWith","getYouTubeThumbnail","url","_url$split$","split","pop","handleExternalLink","choice","open","dateString","month","day","year","formatDate","isImage","match","isVideo","isDoc","isYouTube","isExternal","muted","favicon","renderFilePreview","closeModal","stopPropagation","controls","autoPlay","Blog","posts","expandedDates","setExpandedDates","openPosts","setOpenPosts","searchQuery","setSearchQuery","today","Date","toISOString","groupedPosts","reduce","groups","post","sortedDates","Object","keys","sort","a","b","handlePostClick","includes","filter","p","handleMovePost","direction","indexOf","newOrder","filteredPosts","filteredDates","some","d","handleDateClick","App","currentPage","setCurrentPage","renderContent","AllPosts","blogPosts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.cc4b3abc.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const googleProvider = new GoogleAuthProvider();\r\n\r\n","import React, { useState } from 'react';\r\nimport { auth, googleProvider } from '../firebase';\r\nimport { signInWithEmailAndPassword, signInWithPopup, signOut } from 'firebase/auth';\r\nimport './SignIn.css';\r\n\r\nfunction SignIn({ user, setUser }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleEmailSignIn = async () => {\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      setUser(userCredential.user);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  const handleGoogleSignIn = async () => {\r\n    try {\r\n      const result = await signInWithPopup(auth, googleProvider);\r\n      setUser(result.user);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      setUser(null);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  if (user) {\r\n    return (\r\n      <div className=\"account-box\">\r\n        <p>Welcome, {user.displayName || user.email}</p>\r\n        <button onClick={() => window.location.href = '#account-settings'}>Account Settings</button>\r\n        <button onClick={handleSignOut}>Sign Out</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"sign-in-box\">\r\n      <h2>Sign In</h2>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleEmailSignIn}>Sign In with Email</button>\r\n      <button onClick={handleGoogleSignIn}>Sign In with Google</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React, { useState } from 'react';\r\nimport SignIn from './SignIn';\r\nimport './Sidebar.css';\r\n\r\nfunction Sidebar({ onNavigate, pages }) {\r\n  const [user, setUser] = useState(null);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <ul>\r\n        {pages.map((page, index) => (\r\n          <React.Fragment key={index}>\r\n            <li>\r\n              <a href={`#${page.name.toLowerCase().replace(' ', '-')}`} onClick={() => onNavigate(page.name)}>\r\n                {page.name}\r\n              </a>\r\n            </li>\r\n            {page.separator && <hr className=\"sidebar-divider\" />}\r\n          </React.Fragment>\r\n        ))}\r\n      </ul>\r\n      <SignIn user={user} setUser={setUser} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","const pages = [];\r\n\r\nfunction addPage(name, component, separator = false) {\r\n  pages.push({ name, component, separator });\r\n}\r\n\r\n// Add pages here\r\naddPage('Home', 'Home', true); \r\naddPage('All Posts', 'AllPosts'); \r\naddPage('Users', 'Users', true);\r\naddPage('Profile', 'Profile');\r\naddPage('Post', 'Post');\r\naddPage('Messages', 'Messages', true);\r\naddPage('Update', 'Update');\r\naddPage('Account Settings', 'AccountSettings', true);\r\n\r\nexport default pages;\r\n","import React from 'react';\r\nimport './Home.css';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"page\">\r\n      <img src={`${process.env.PUBLIC_URL}/favicon.ico`} alt=\"Site Icon\" className=\"site-icon\" />\r\n      <p>This is the home page. Feel free to explore!</p>\r\n      <div className=\"contact-info\">\r\n        <h2>Contact Info</h2>\r\n        <p>Name: Basil James Parrish</p>\r\n        <p>Phone: <a href=\"tel:+13608209406\">+1 (360)-820-9406</a></p>\r\n        <p>Email: <a href=\"mailto:basilkenku@gmail.com\">basilkenku@gmail.com</a></p>\r\n        <p>\r\n          Discord: <a href=\"https://discord.com/users/bjjflp\" target=\"_blank\" rel=\"noopener noreferrer\">bjjflp</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport './CollapsiblePost.css';\r\n\r\nfunction CollapsiblePost({ title, subtitle, date, author, content, files = [] }) {\r\n  const [modalFile, setModalFile] = useState(null);\r\n  const [externalLink, setExternalLink] = useState(null);\r\n\r\n  const openModal = (file) => setModalFile(file);\r\n  const closeModal = () => setModalFile(null);\r\n\r\n  const getFileSrc = (file) => {\r\n    if (file.startsWith('http')) {\r\n      return file; // Return the URL directly for external links\r\n    }\r\n    return `${process.env.PUBLIC_URL}/attachments/${file}`; // Use public/attachments path\r\n  };\r\n\r\n  const getYouTubeThumbnail = (url) => {\r\n    const videoId = url.split('v=')[1]?.split('&')[0] || url.split('/').pop();\r\n    return `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`;\r\n  };\r\n\r\n  const renderFilePreview = (file) => {\r\n    const isImage = file.match(/\\.(jpg|jpeg|png|gif)$/i);\r\n    const isVideo = file.match(/\\.(mp4|webm|ogg)$/i);\r\n    const isDoc = file.match(/\\.(pdf|docx|txt)$/i);\r\n    const isYouTube = file.match(/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)/i);\r\n    const isExternal = file.startsWith('http') && !isYouTube;\r\n\r\n    const src = getFileSrc(file);\r\n\r\n    if (!src) return null; // Do not render anything if the file is not found\r\n\r\n    if (isImage) {\r\n      return (\r\n        <img\r\n          src={src}\r\n          alt=\"File preview\"\r\n          className=\"file-preview\"\r\n          onClick={() => openModal(file)}\r\n        />\r\n      );\r\n    } else if (isVideo) {\r\n      return (\r\n        <video\r\n          src={src}\r\n          className=\"file-preview\"\r\n          onClick={() => openModal(file)}\r\n          muted\r\n        />\r\n      );\r\n    } else if (isYouTube) {\r\n      return (\r\n        <img\r\n          src={getYouTubeThumbnail(file)}\r\n          alt=\"YouTube Thumbnail\"\r\n          className=\"file-preview youtube-thumbnail\"\r\n          onClick={() => openModal(file)}\r\n        />\r\n      );\r\n    } else if (isExternal) {\r\n      const favicon = `https://www.google.com/s2/favicons?sz=64&domain_url=${file}`;\r\n      return (\r\n        <img\r\n          src={favicon}\r\n          alt=\"Website Favicon\"\r\n          className=\"file-preview external-favicon\"\r\n          onClick={() => setExternalLink(file)}\r\n        />\r\n      );\r\n    } else if (isDoc) {\r\n      return (\r\n        <div\r\n          className=\"file-preview doc-preview\"\r\n          onClick={() => openModal(file)}\r\n        >\r\n          <p>{file}</p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const handleExternalLink = (choice) => {\r\n    if (choice === 'yes') {\r\n      window.open(externalLink, '_blank');\r\n    }\r\n    setExternalLink(null);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const [month, day, year] = dateString.split('/');\r\n    return `${month}/${day}/${year}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"collapsible-post\">\r\n      <h3>{title}</h3>\r\n      <p className=\"subtitle\">{subtitle}</p>\r\n      <p className=\"date\">{formatDate(date)}</p>\r\n      <p className=\"author\">By: {author}</p>\r\n      <hr className=\"file-divider\" />\r\n      <div className=\"post-details\">\r\n        <p>{content}</p>\r\n        {files.length > 0 && (\r\n          <>\r\n            <hr className=\"file-divider\" />\r\n            <div className=\"file-gallery\">\r\n              {files.map((file, index) => (\r\n                <div key={index} className=\"file-container\">\r\n                  {renderFilePreview(file)}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      {modalFile && (\r\n        <div className=\"file-modal\" onClick={closeModal}>\r\n          <div className=\"modal-content no-background\" onClick={(e) => e.stopPropagation()}>\r\n            {modalFile.match(/\\.(jpg|jpeg|png|gif)$/i) && (\r\n              <img src={getFileSrc(modalFile)} alt=\"Full view\" />\r\n            )}\r\n            {modalFile.match(/\\.(mp4|webm|ogg)$/i) && (\r\n              <video src={getFileSrc(modalFile)} controls autoPlay />\r\n            )}\r\n            {modalFile.match(/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)/i) && (\r\n              <iframe\r\n                src={modalFile.replace('watch?v=', 'embed/')}\r\n                title=\"YouTube Video\"\r\n                className=\"youtube-modal\"\r\n              />\r\n            )}\r\n            {modalFile.match(/\\.(pdf|docx|txt)$/i) && (\r\n              <iframe\r\n                src={getFileSrc(modalFile)}\r\n                title=\"Document Viewer\"\r\n                className=\"doc-viewer\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {externalLink && (\r\n        <div className=\"external-link-popup\">\r\n          <p>Do you want to leave this website?</p>\r\n          <button onClick={() => handleExternalLink('yes')}>Yes</button>\r\n          <button onClick={() => handleExternalLink('no')}>No</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CollapsiblePost;\r\n","import React, { useState } from 'react';\r\nimport CollapsiblePost from '../components/CollapsiblePost'; // Ensure correct default import\r\nimport './AllPosts.css';\r\n\r\nfunction Blog({ posts }) {\r\n  const [expandedDates, setExpandedDates] = useState([]);\r\n  const [openPosts, setOpenPosts] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const today = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format\r\n\r\n  const groupedPosts = posts.reduce((groups, post) => {\r\n    const date = new Date(post.date).toISOString().split('T')[0]; // Convert to YYYY-MM-DD format\r\n    if (!groups[date]) {\r\n      groups[date] = [];\r\n    }\r\n    groups[date].push(post);\r\n    return groups;\r\n  }, {});\r\n\r\n  const sortedDates = Object.keys(groupedPosts).sort((a, b) => new Date(b) - new Date(a)); // Sort dates newest to oldest\r\n\r\n  const handleDateClick = (date) => {\r\n    if (expandedDates.includes(date)) {\r\n      setExpandedDates(expandedDates.filter((d) => d !== date));\r\n    } else {\r\n      setExpandedDates([...expandedDates, date]);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const [year, month, day] = dateString.split('-');\r\n    return `${month}/${day}/${year}`;\r\n  };\r\n\r\n  const handlePostClick = (post) => {\r\n    if (openPosts.includes(post)) {\r\n      setOpenPosts(openPosts.filter((p) => p !== post)); // Close the post if already open\r\n    } else {\r\n      setOpenPosts([...openPosts, post]); // Open the post if not already open\r\n    }\r\n  };\r\n\r\n  const handleMovePost = (post, direction) => {\r\n    const index = openPosts.indexOf(post);\r\n    if (direction === 'up' && index > 0) {\r\n      const newOrder = [...openPosts];\r\n      [newOrder[index - 1], newOrder[index]] = [newOrder[index], newOrder[index - 1]];\r\n      setOpenPosts(newOrder);\r\n    } else if (direction === 'down' && index < openPosts.length - 1) {\r\n      const newOrder = [...openPosts];\r\n      [newOrder[index + 1], newOrder[index]] = [newOrder[index], newOrder[index + 1]];\r\n      setOpenPosts(newOrder);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchQuery(e.target.value.toLowerCase());\r\n  };\r\n\r\n  const filteredPosts = posts.filter(\r\n    (post) =>\r\n      post.title.toLowerCase().includes(searchQuery) ||\r\n      post.subtitle.toLowerCase().includes(searchQuery) ||\r\n      post.content.toLowerCase().includes(searchQuery)\r\n  );\r\n\r\n  const filteredDates = sortedDates.filter((date) =>\r\n    groupedPosts[date].some((post) => filteredPosts.includes(post))\r\n  );\r\n\r\n  return (\r\n    <div className=\"blog\">\r\n      <div className=\"date-sidebar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search posts...\"\r\n          className=\"search-bar\"\r\n          value={searchQuery}\r\n          onChange={handleSearch}\r\n        />\r\n        <div className=\"date-list\">\r\n          {filteredDates.map((date) => (\r\n            <div key={date} className=\"date-group\">\r\n              <button\r\n                className={`date-button ${expandedDates.includes(date) ? 'active' : ''}`}\r\n                onClick={() => handleDateClick(date)}\r\n              >\r\n                {date === today && <span className=\"new-indicator\">-NEW POSTS-</span>}\r\n                {formatDate(date)}\r\n              </button>\r\n              {expandedDates.includes(date) && (\r\n                <div className=\"post-titles-box\">\r\n                  {groupedPosts[date]\r\n                    .filter((post) => filteredPosts.includes(post))\r\n                    .map((post, index) => (\r\n                      <button\r\n                        key={index}\r\n                        className={`post-title-button ${\r\n                          openPosts.includes(post) ? 'active' : ''\r\n                        }`}\r\n                        onClick={() => handlePostClick(post)}\r\n                      >\r\n                        {post.date === today && <span className=\"new-indicator\">-NEW-</span>}\r\n                        {post.title}\r\n                      </button>\r\n                    ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"content-area\">\r\n        {openPosts.length === 0 ? (\r\n          <div className=\"blog-welcome\">\r\n            <img src={`${process.env.PUBLIC_URL}/favicon.ico`} alt=\"Site Icon\" className=\"site-icon\" />\r\n\r\n            <h1>Welcome to the Post cataloge!</h1>\r\n            <hr className=\"divider\" />\r\n            <p>Explore posts and updates peaple around bellingham.</p>\r\n            <p>Click on a date then a post to get started, </p>\r\n            <p>-or-</p>\r\n            <p>search posts to find one!</p>\r\n          </div>\r\n        ) : (\r\n          openPosts.map((post, index) => (\r\n            <div\r\n              key={index}\r\n              className={`blog-post-content ${index === openPosts.length - 1 ? 'last-post' : ''}`}\r\n            >\r\n              <div className=\"post-controls\">\r\n                <button onClick={() => handleMovePost(post, 'up')}>↑</button>\r\n                <button onClick={() => handleMovePost(post, 'down')}>↓</button>\r\n                <button onClick={() => handlePostClick(post)}>✖</button>\r\n              </div>\r\n              <CollapsiblePost {...post} />\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Blog;\r\n","import './App.css';\r\nimport React, { useState } from 'react';\r\nimport Sidebar from './components/Sidebar';\r\nimport pages from './pages/PageConfig';\r\nimport blogPosts from './data/blogPosts.json';\r\nimport Home from './pages/Home';\r\nimport AllPosts from './pages/AllPosts';\r\n\r\nfunction App() {\r\n  const [currentPage, setCurrentPage] = useState('Home');\r\n\r\n  const renderContent = () => {\r\n    switch (currentPage) {\r\n      case 'All Posts':\r\n        return <AllPosts posts={blogPosts} />;\r\n      case 'Home':\r\n      default:\r\n        return <Home />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Sidebar onNavigate={setCurrentPage} pages={pages} />\r\n      <div className=\"main-container\">\r\n        <div className=\"App-content\">{renderContent()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}